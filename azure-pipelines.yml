trigger:
- develop

strategy:
  matrix:
#    linux:
#      imageName: 'ubuntu-18.04'
#      python.version: '3.7'
#      DISABLE_LLVM_CONFIG: True
#    mac:
#      imageName: 'macos-10.14'
#      python.version: '3.7'
#      DISABLE_LLVM_CONFIG: True
    windows:
       imageName: 'vs2017-win2016'
       VSINSTALL: "Microsoft Visual Studio\\2017\\Enterprise\\VC\\Auxiliary\\Build"
       MSVC_PLATFORM: amd64
       python.version: '3.7'

pool:
  vmImage: $(imageName)


steps:
- checkout: self
  submodules: recursive
  persistCredentials: true

- powershell: gci env:* | sort-object name

- bash: |
    mkdir -p $HOME/.inaos/cmake
    mkdir -p $HOME/INAOS
    echo "INAC_REPOSITORY_LOCAL=$HOME/INAOS" > $HOME/.inaos/cmake/repository.txt
    echo "INAC_REPOSITORY_REMOTE=https://inaos.jfrog.io/inaos/libs-release-local/inaos" >> $HOME/.inaos/cmake/repository.txt
    echo "INAC_REPOSITORY_USRPWD=licensed:AKCp5bBraH7CasbsYCURsjzkbjXwVwdYcT7u39EiuL6GjnK1VKfKQWCd1E2E64mHokU5YUHku" >> $HOME/.inaos/cmake/repository.txt
    git submodule update --init --recursive
  displayName: Clone repos

- powershell: |
    Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
  displayName: Add conda to PATH

- script: |
    conda create --yes --quiet --name iArrayEnv
  displayName: Create Anaconda environment

- script: |
    call activate iArrayEnv
    conda install --yes --quiet --name iArrayEnv -c intel mkl-include
  displayName: Download mkl-iclude

- script: |
    call activate iArrayEnv
    conda install --yes --quiet --name iArrayEnv -c intel mkl-static
  displayName: Download mkl-iclude


- script: |
    call activate iArrayEnv
    conda install --yes --quiet --name iArrayEnv -c intel icc_rt
  displayName: Download mkl-iclude

- script: |
    call activate iArrayEnv
    conda install --yes --quiet --name iArrayEnv -c numba llvmdev
  displayName: Download llvm


- powershell: Write-Host "##vso[task.prependpath]$env:CONDA\envs\iArrayEnv\Library\bin"
  displayName: Add SVML to PATH

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --retries 3 -U pip setuptools setuptools-scm scikit-build numpy llvmlite cython numexpr
  displayName: 'Install dependencies'

- script: |
    call "C:\Program Files (x86)\%VSINSTALL%\vcvarsall.bat" %MSVC_PLATFORM%
    python setup.py build_ext -i --build-type RelWithDebInfo --generator "NMake Makefiles" -- -DINAC_TARGET_ARCH=x86_64 -DLLVM_DIR=%CONDA%/envs/iArrayEnv/Library/lib/cmake/llvm -DWINGEN="NMake Makefiles"
  displayName: 'Compile package'

- script: |
    pip install pytest
    pytest tests
  displayName: 'Run Tests'
